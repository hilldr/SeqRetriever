* Useful operations
**  Install from Github
#+BEGIN_SRC R :session *R* :eval yes
library(devtools)
devtools::install_github("hilldr/SeqRetriever/SeqRetriever")
#+END_SRC
** Process package documentation
#+BEGIN_SRC R :session *R* :eval yes
wd <- getwd()
if (wd != "/home/david/development/SeqRetriever/SeqRetriever"){
  setwd("/home/david/development/SeqRetriever/SeqRetriever")
} else {
  print("Already in the SeqRetriever working directory")
}
#file.remove("NAMESPACE")
library(roxygen2)
library(devtools)
document()
#+END_SRC

#+RESULTS:

** Install latest version from local source
#+BEGIN_SRC R :session *R* :eval yes
library(devtools)
setwd("..")
install("SeqRetriever")
#+END_SRC

#+RESULTS:
: TRUE

** Uninstall SeqRetriever
#+BEGIN_SRC R :session *R* :eval yes
remove.packages("SeqRetriever")
#+END_SRC

#+RESULTS:

** Convert Org-mode to github markdown
#+begin_src sh
pandoc --from=org --to=markdown -o README.md SeqRetriever.org 
#+end_src

#+RESULTS:

#+begin_src ditaa :file workflow.png :cmdline -E
+-------------+   +------------------+   +---------------------------+
+ FASTQ files +-->+ Tophat/Cufflinks +-->+ Cuffnorm output directory +--\
+-------------+   +------------------+   +---------------------------+  |
/-----------------------------------------------------------------------/
|
V
+---------------------------------------+
+ Format R dataframe with SeqDataframe()|
+-----------------+---------------------+
                  |
                  V
+-----------------+--------------------------+
| Retrieve genes of interest with SeqGenes() |
+-----------------+--------------------------+
                  |
                  V
+-----------------+-----------------------------+
| Subset genes bases on statistical significance|
: with SeqStatSubset()                          :
+-----------------+-----------------------------+
                  |
                  |   +----------------------------------+
                  +-->+ Output Boxplots with SeqBoxplot()|
                  |   +----------------------------------+
                  |   +---------------------------------+
                  +-->+ Output Heatmap with SeqHeatmap()|
                  |   +---------------------------------+
                  |   +--------------------------------------------+
                  +-->+ Output CSV with P values with SeqStudents()|
                      +--------------------------------------------+
#+end_src
** Benchmarking SeqDataframe
#+begin_src R :session *R* :results text :exports none :eval yes
library(profvis)
source("/home/david/development/SeqRetriever/SeqRetriever/R/SeqDataframe.R")
test <- profvis({    
   slo <- SeqDataframe(dir = "/home/david/Data/RNAseq/HIO_RNAseq/HIO_Ecoli_ES/RESULTS/norm_out")
})
#+end_src

#+RESULTS:

11200 ms

#+begin_src R :session *R* :results text :exports none :eval yes
library(profvis)
# test
SeqDataframe <- function(dir = "./"){
  # dir.count is a string for the count table location
  dir.count <- paste(dir, "/genes.count_table", sep="")
  # read in the count table from dir.count
  counts <- read.table(dir.count, header=TRUE, sep="\t", stringsAsFactors = FALSE)
  counts$tracking_id <- NULL
  # Read in data attributes from genes.attr_table file
  dir.attr <- paste(dir,"/genes.attr_table", sep="")
  cn.attr <- read.table(dir.attr, header=TRUE, sep="\t", stringsAsFactors = FALSE)
  # Bind the gene_short_name from the attr.table to data1,
  gene_short_name <- as.character(cn.attr[,"gene_short_name"])
  data1 <- cbind(gene_short_name, counts)
  data1$gene_short_name <- as.character(data1$gene_short_name)
  # load library dplyr instead of plyr
  library(dplyr)
  # Sum counts for gene isoforms  
  data1 <- data1 %>% group_by(gene_short_name) %>% summarise_each(funs(sum)) %>% as.data.frame()
#  data1 <- ddply(data1, "gene_short_name", numcolwise(sum))
  rownames(data1) <- data1$gene_short_name  
  return(data1)
}
test <- profvis({    
    out <- SeqDataframe(dir = "/home/david/Data/RNAseq/HIO_RNAseq/HIO_Ecoli_ES/RESULTS/norm_out")
})
#+end_src

#+RESULTS:

970 ms



